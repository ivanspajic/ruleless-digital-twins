@prefix : <http://www.semanticweb.org/ivans/ontologies/2025/instance-model-1#>.
@prefix meta: <http://www.semanticweb.org/ivans/ontologies/2025/dt-code-generation/>.
@prefix ssn: <http://www.w3.org/ns/ssn/>.
@prefix sosa: <http://www.w3.org/ns/sosa/>.
@include <OWL>.

// Validates that system optimizations are not conflicting.
[rule4a:    (?thing1 meta:optimizesFor ?propertyChange1)
            (?propertyChange1 ssn:forProperty ?property)
            (?thing2 meta:optimizesFor ?propertyChange2)
            (?propertyChange2 ssn:forProperty ?property)
            (?propertyChange1 meta:affectsPropertyWith meta:ValueIncrease)
            (?propertyChange2 meta:affectsPropertyWith meta:ValueDecrease)
            ->  print()
                print("Conflicting optimizations detected!")
                print(?thing1, "optimizes for", ?property, "with ValueIncrease through", ?propertyChange1)
                print(?thing2, "optimizes for", ?property, "with ValueDecrease through", ?propertyChange2)
                print()
]


// The following rules validate against any conflicting or useless constraints in the same or across multiple
// OptimalConditions for the same Property. E.g., for the same Property value, useless constraints could be >15
// and <=15 while conflicting constraints might be =15 and >20. These rules do not check the combination of
// minExclusive (>) and maxExclusive (<) since this reduces to everything but the excluded value.
// E.g., >15 and <15 = !15.

// Checks for simultaneous >= and <= with the same value.
[rule4b:    (?restriction1 rdf:comment ?property)
            (?restriction1 xsd:minInclusive ?value)
            (?restriction2 rdf:comment ?property)
            (?restriction2 xsd:maxInclusive ?value)
            ->  print()
                print("Conflicting conditions detected!")
                print("Conditions for", ?property, "are >=", ?value, "and <=", ?value, "at the same time.")
                print()
]

// Checks for simultaneous >= and < with the same value.
[rule4c:    (?restriction1 rdf:comment ?property)
            (?restriction1 xsd:minInclusive ?value)
            (?restriction2 rdf:comment ?property)
            (?restriction2 xsd:maxExclusive ?value)
            ->  print()
                print("Conflicting conditions detected!")
                print("Conditions for", ?property, "are >=", ?value, "and <", ?value, "at the same time.")
                print()
]

// Checks for simultaneous > and <= with the same value.
[rule4d:    (?restriction1 rdf:comment ?property)
            (?restriction1 xsd:minExclusive ?value)
            (?restriction2 rdf:comment ?property)
            (?restriction2 xsd:maxInclusive ?value)
            ->  print()
                print("Conflicting conditions detected!")
                print("Conditions for", ?property, "are >", ?value, "and <=", ?value, "at the same time.")
                print()
]

// Checks for simultanous = with at least two different values.
[rule4e:    (?bNode1 rdf:comment ?property)
            (?bNode1 owl:hasValue ?value1)
            (?bNode2 rdf:comment ?property)
            (?bNode2 owl:hasValue ?value2)
            notEqual(?value1, ?value2)
            ->  print()
                print("Conflicting conditions detected!")
                print("Conditions for", ?property, "are", ?value1, "and", ?value2, "at the same time.")
                print()
]

// Checks for simultaneous = and > with potentially different values.
[rule4f:    (?bNode rdf:comment ?property)
            (?bNode owl:hasValue ?value1)
            (?restriction rdf:comment ?property)
            (?restriction xsd:minExclusive ?value2)
            ->  print()
                print("Conflicting conditions detected!")
                print("Conditions for", ?property, "are", ?value1, "and >", ?value2, "at the same time.")
                print()
]

// Checks for simultaneous = and >= with potentially different values.
[rule4g:    (?bNode rdf:comment ?property)
            (?bNode owl:hasValue ?value1)
            (?restriction rdf:comment ?property)
            (?restriction xsd:minInclusive ?value2)
            ->  print()
                print("Conflicting conditions detected!")
                print("Conditions for", ?property, "are", ?value1, "and >=", ?value2, "at the same time.")
                print()
]

// Checks for simultaneous = and < with the same value.
[rule4h:    (?bNode rdf:comment ?property)
            (?bNode owl:hasValue ?value1)
            (?restriction rdf:comment ?property)
            (?restriction xsd:maxExclusive ?value2)
            ->  print()
                print("Conflicting conditions detected!")
                print("Conditions for", ?property, "are", ?value1, "and <", ?value2, "at the same time.")
                print()
]

// Checks for simultaneous = and <= with the same value.
[rule4i:    (?bNode rdf:comment ?property)
            (?bNode owl:hasValue ?value1)
            (?restriction rdf:comment ?property)
            (?restriction xsd:maxInclusive ?value2)
            ->  print()
                print("Conflicting conditions detected!")
                print("Conditions for", ?property, "are", ?value1, "and <=", ?value2, "at the same time.")
                print()
]

// TODO: add a validation rule for useless conditions with ORs