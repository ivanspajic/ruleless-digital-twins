@prefix : <http://www.semanticweb.org/ivans/ontologies/2025/instance-model-1#>.
@prefix meta: <http://www.semanticweb.org/ivans/ontologies/2025/dt-code-generation/>.
@prefix ssn: <http://www.w3.org/ns/ssn/>.
@include <OWL>.

// The following rule covers individuals with single constraints. Once an OptimalCondition constraint has been
// located, a temporary mark will be placed to allow subsequent rules to match and fire.

[singleConstraint: (?individual rdf:type owl:NamedIndividual)
    (?individual rdf:type meta:OptimalCondition)
    (?individual ssn:forProperty ?observableProperty)
    (?individual meta:hasValueConstraint ?bNode1)
    (?bNode1 rdf:type ?bNode2)
    (?bNode2 owl:withRestrictions ?bNode3)
    (?bNode3 rdf:first ?restriction)
    -> (?restriction rdf:comment ?observableProperty)]

// The following rules cover individuals with multiple constraints (up to 3 constraints per individual supported).

[multiConstraint1: (?individual rdf:type owl:NamedIndividual)
    (?individual rdf:type meta:OptimalCondition)
    (?individual meta:forProperty ?property)
    (?individual meta:hasValueConstraint ?bNode1)
    (?bNode1 rdf:type ?bNode2)
    (?bNode2 owl:unionOf ?bNode3)
    (?bNode3 rdf:first ?bNode4)
    (?bNode4 owl:withRestrictions ?bNode5)
    (?bNode5 rdf:first ?restriction)
    -> (?restriction rdf:comment "opt-cond-mark")]

[multiConstraint2: (?individual rdf:type owl:NamedIndividual)
    (?individual rdf:type meta:OptimalCondition)
    (?individual meta:hasValueConstraint ?bNode1)
    (?bNode1 rdf:type ?bNode2)
    (?bNode2 owl:unionOf ?bNode3)
    (?bNode3 rdf:rest ?bNode4)
    (?bNode4 rdf:first ?bNode5)
    (?bNode5 owl:withRestrictions ?bNode6)
    (?bNode6 rdf:first ?restriction)
    -> (?restriction rdf:comment "opt-cond-mark")]

[multiConstraint3: (?individual rdf:type owl:NamedIndividual)
    (?individual rdf:type meta:OptimalCondition)
    (?individual meta:hasValueConstraint ?bNode1)
    (?bNode1 rdf:type ?bNode2)
    (?bNode2 owl:unionOf ?bNode3)
    (?bNode3 rdf:rest ?bNode4)
    (?bNode4 rdf:rest ?bNode5)
    (?bNode5 rdf:first ?bNode6)
    (?bNode6 owl:withRestrictions ?bNode7)
    (?bNode7 rdf:first ?restriction)
    -> (?restriction rdf:comment "opt-cond-mark")]

// Upon locating the temporary marks for OptimalCondition constraints, these rules generate corresponding
// Strategies and remove the marks.

[rule1a: (?restriction rdf:comment "opt-cond-mark")
    (?restriction xsd:minExclusive ?value)
    makeTemp(?x)
    -> (?restriction rdf:comment "MIN EXCLUSIVE")
        drop(0)]

[rule1b: (?restriction rdf:comment ?observableProperty)
    (?observableProperty rdf:type owl:NamedIndividual)
    (?observableProperty meta:propertyFor ?test)
    makeTemp(?x)
    -> (?restriction rdf:label "MIN INCLUSIVE")
        (?restriction rdf:comment ?test)
        drop(0)]

[rule1c: (?restriction rdf:comment "opt-cond-mark")
    (?restriction xsd:maxExclusive ?value)
    makeTemp(?x)
    -> (?restriction rdf:comment "MAX EXCLUSIVE")
        drop(0)]

[rule1d: (?restriction rdf:comment "opt-cond-mark")
    (?restriction xsd:maxInclusive ?value)
    makeTemp(?x)
    -> (?restriction rdf:comment "MAX INCLUSIVE")
        drop(0)]

// generative rules for PropertyChanges (fix this comment) - this needs to account for properties being used
// by actuator states and optimal conditions

[ruleTest: (?restriction rdf:comment ?test)
    (?restriction rdf:label "MIN INCLUSIVE")
    makeTemp(?x)
    -> (?x rdf:type :PropertyChange)
        (?x meta:hasActuatorState ?test)]



// this is what a Strategy and PropertyChange should look like in .ttl
//
// ###  http://www.semanticweb.org/ivans/ontologies/2025/instance-model-1#TestPropertyChange
// :TestPropertyChange rdf:type owl:NamedIndividual ,
//                              <http://www.semanticweb.org/ivans/ontologies/2025/dt-code-generation/PropertyChangeByReconfiguration> ;
//                     <http://www.semanticweb.org/ivans/ontologies/2025/dt-code-generation/affectsPropertyWith> <http://www.semanticweb.org/ivans/ontologies/2025/dt-code-generation/ValueDecrease> ;
//                     <http://www.semanticweb.org/ivans/ontologies/2025/dt-code-generation/alteredBy> <http://www.semanticweb.org/ivans/ontologies/2025/dt-code-generation/ValueDecrease> ;
//                     <http://www.w3.org/ns/ssn/forProperty> :TestConfigurableProperty .


// ###  http://www.semanticweb.org/ivans/ontologies/2025/instance-model-1#TestStrategy
// :TestStrategy rdf:type owl:NamedIndividual ,
//                        <http://www.semanticweb.org/ivans/ontologies/2025/dt-code-generation/Strategy> ;
//               <http://www.w3.org/ns/ssn/implements> :TestPropertyChange ;
//               <http://www.w3.org/ns/ssn/implements> :TestPropertyChange2 ;
//               <http://www.w3.org/ns/ssn/implements> :TestPropertyChange3 ;
//               <http://www.semanticweb.org/ivans/ontologies/2025/dt-code-generation/hasIdentifier> "TestIdentifier" ;
//               <http://www.semanticweb.org/ivans/ontologies/2025/dt-code-generation/hasTimeLimit> ""^^xsd:duration .