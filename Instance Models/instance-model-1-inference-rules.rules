@prefix : <http://www.semanticweb.org/ivans/ontologies/2025/instance-model-1#>.
@prefix meta: <http://www.semanticweb.org/ivans/ontologies/2025/dt-code-generation/>.
@prefix ssn: <http://www.w3.org/ns/ssn/>.
@include <OWL>.

// The following rule covers individuals with single constraints. Once an OptimalCondition constraint has been
// located, a temporary mark will be placed to allow subsequent rules to match and fire.

[rule1a: (?individual rdf:type owl:NamedIndividual)
    (?individual rdf:type meta:OptimalCondition)
    (?individual ssn:forProperty ?observableProperty)
    (?individual meta:hasValueConstraint ?bNode1)
    (?bNode1 rdf:type ?bNode2)
    (?bNode2 owl:withRestrictions ?bNode3)
    (?bNode3 rdf:first ?restriction)
    -> (?restriction rdf:comment "opt-cond-mark")
        (?restriction rdf:comment ?observableProperty)]

// The following rules cover individuals with multiple constraints (up to 3 constraints per individual supported).

[rule1b: (?individual rdf:type owl:NamedIndividual)
    (?individual rdf:type meta:OptimalCondition)
    (?individual meta:forProperty ?property)
    (?individual meta:hasValueConstraint ?bNode1)
    (?bNode1 rdf:type ?bNode2)
    (?bNode2 owl:unionOf ?bNode3)
    (?bNode3 rdf:first ?bNode4)
    (?bNode4 owl:withRestrictions ?bNode5)
    (?bNode5 rdf:first ?restriction)
    -> (?restriction rdf:comment "opt-cond-mark")]

[rule1c: (?individual rdf:type owl:NamedIndividual)
    (?individual rdf:type meta:OptimalCondition)
    (?individual meta:hasValueConstraint ?bNode1)
    (?bNode1 rdf:type ?bNode2)
    (?bNode2 owl:unionOf ?bNode3)
    (?bNode3 rdf:rest ?bNode4)
    (?bNode4 rdf:first ?bNode5)
    (?bNode5 owl:withRestrictions ?bNode6)
    (?bNode6 rdf:first ?restriction)
    -> (?restriction rdf:comment "opt-cond-mark")]

[rule1d: (?individual rdf:type owl:NamedIndividual)
    (?individual rdf:type meta:OptimalCondition)
    (?individual meta:hasValueConstraint ?bNode1)
    (?bNode1 rdf:type ?bNode2)
    (?bNode2 owl:unionOf ?bNode3)
    (?bNode3 rdf:rest ?bNode4)
    (?bNode4 rdf:rest ?bNode5)
    (?bNode5 rdf:first ?bNode6)
    (?bNode6 owl:withRestrictions ?bNode7)
    (?bNode7 rdf:first ?restriction)
    -> (?restriction rdf:comment "opt-cond-mark")]

// Upon locating the temporary marks for OptimalCondition constraints, these rules find the respective
// PropertyChanges and set a mark for the required changes to the property in question.

[rule2a: (?restriction rdf:comment "opt-cond-mark")
    (?restriction rdf:comment ?observableProperty)
    (?observableProperty meta:propertyFor ?propertyChange)
    (?propertyChange rdf:type meta:PropertyChange)
    (?restriction xsd:minExclusive ?value)
    -> drop(0, 1)
        (?restriction rdf:comment "prop-change-inc-mark")
        (?restriction rdf:comment ?propertyChange)]

[rule2b: (?restriction rdf:comment "opt-cond-mark")
    (?restriction rdf:comment ?observableProperty)
    (?observableProperty meta:propertyFor ?propertyChange)
    (?propertyChange rdf:type meta:PropertyChange)
    (?restriction xsd:minInclusive ?value)
    -> drop(0, 1)
        (?restriction rdf:comment "prop-change-inc-mark")
        (?restriction rdf:comment ?propertyChange)]

[rule2c: (?restriction rdf:comment "opt-cond-mark")
    (?restriction rdf:comment ?observableProperty)
    (?observableProperty meta:propertyFor ?propertyChange)
    (?propertyChange rdf:type meta:PropertyChange)
    (?restriction xsd:maxExclusive ?value)
    -> drop(0, 1)
        (?restriction rdf:comment "prop-change-dec-mark")
        (?restriction rdf:comment ?propertyChange)]

[rule2d: (?restriction rdf:comment "opt-cond-mark")
    (?restriction rdf:comment ?observableProperty)
    (?observableProperty meta:propertyFor ?propertyChange)
    (?propertyChange rdf:type meta:PropertyChange)
    (?restriction xsd:maxInclusive ?value)
    -> drop(0, 1)
        (?restriction rdf:comment "prop-change-dec-mark")
        (?restriction rdf:comment ?propertyChange)]

// 

[rule3a: (?restriction rdf:comment "prop-change-inc-mark")
    (?restriction rdf:comment ?propertyChange)
    (?propertyChange meta:enactedBy ?actuatorState)
    (?propertyChange meta:affectsPropertyWith meta:ValueIncrease)
    (?actuatorState rdf:type meta:ActuatorState)
    makeTemp(?strategy)
    -> drop(0, 1)
        (?strategy rdf:type meta:Strategy)
        (?strategy ssn:implements ?actuatorState)
        (?strategy meta:hasIdentifier ?strategy)]

[rule3b: (?restriction rdf:comment "prop-change-dec-mark")
    (?restriction rdf:comment ?propertyChange)
    (?propertyChange meta:enactedBy ?actuatorState)
    (?propertyChange meta:affectsPropertyWith meta:ValueDecrease)
    (?actuatorState rdf:type meta:ActuatorState)
    makeTemp(?strategy)
    -> drop(0, 1)
        (?strategy rdf:type meta:Strategy)
        (?strategy ssn:implements ?actuatorState)
        (?strategy meta:hasIdentifier ?strategy)]

[rule3c: (?restriction rdf:comment "prop-change-inc-mark")
    (?restriction rdf:comment ?propertyChange)
    (?propertyChange meta:enactedBy ?configurationProperty)
    (?propertyChange meta:affectsPropertyWith meta:ValueIncrease)
    (?configurationProperty rdf:type meta:ConfigurationProperty)
    (?configurationProperty meta:alteredBy ?effect)
    makeTemp(?strategy)
    -> drop(0, 1)
        (?strategy rdf:type meta:Strategy)
        (?strategy ssn:forProperty ?configurationProperty)
        (?strategy meta:affectsPropertyWith ?effect)
        (?strategy meta:hasIdentifier ?strategy)]

[rule3d: (?restriction rdf:comment "prop-change-dec-mark")
    (?restriction rdf:comment ?propertyChange)
    (?propertyChange meta:enactedBy ?configurationProperty)
    (?propertyChange meta:affectsPropertyWith meta:ValueDecrease)
    (?configurationProperty rdf:type meta:ConfigurationProperty)
    (?configurationProperty meta:alteredBy ?effect)
    makeTemp(?strategy)
    -> drop(0, 1)
        (?strategy rdf:type meta:Strategy)
        (?strategy ssn:forProperty ?configurationProperty)
        (?strategy meta:affectsPropertyWith ?effect)
        (?strategy meta:hasIdentifier ?strategy)]